// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package Debugger.RemoteTargetRpc;

import "google/protobuf/wrappers.proto";

import "Common.proto";

service RemoteTargetRpcService {
  rpc AttachToProcessWithID(AttachToProcessWithIDRequest)
      returns (AttachToProcessWithIDResponse) {
  }
  rpc BreakpointCreateByLocation(BreakpointCreateByLocationRequest)
      returns (BreakpointCreateByLocationResponse) {
  }
  rpc BreakpointCreateByName(BreakpointCreateByNameRequest)
      returns (BreakpointCreateByNameResponse) {
  }
  rpc BreakpointCreateByAddress(BreakpointCreateByAddressRequest)
      returns (BreakpointCreateByAddressResponse) {
  }
  rpc CreateFunctionOffsetBreakpoint(CreateFunctionOffsetBreakpointRequest)
      returns (CreateFunctionOffsetBreakpointResponse) {
  }
  rpc BreakpointDelete(BreakpointDeleteRequest)
      returns (BreakpointDeleteResponse) {
  }
  rpc GetNumModules(GetNumModulesRequest) returns (GetNumModulesResponse) {
  }
  rpc GetModuleAtIndex(GetModuleAtIndexRequest)
      returns (GetModuleAtIndexResponse) {
  }
  rpc WatchAddress(WatchAddressRequest) returns (WatchAddressResponse) {
  }
  rpc DeleteWatchpoint(DeleteWatchpointRequest)
      returns (DeleteWatchpointResponse) {
  }
  rpc ResolveLoadAddress(ResolveLoadAddressRequest)
      returns (ResolveLoadAddressResponse) {
  }
  rpc LoadCore(LoadCoreRequest) returns (LoadCoreResponse) {
  }
  rpc RemoveModule(RemoveModuleRequest) returns (RemoveModuleResponse) {
  }
  rpc AddModule(AddModuleRequest) returns (AddModuleResponse) {
  }
  rpc SetModuleLoadAddress(SetModuleLoadAddressRequest)
      returns (SetModuleLoadAddressResponse) {
  }
  rpc ReadInstructionInfos(ReadInstructionInfosRequest)
      returns (ReadInstructionInfosResponse) {
  }
}

message AttachToProcessWithIDRequest {
  Common.GrpcSbTarget target = 1;
  Common.GrpcSbListener listener = 2;
  uint64 pid = 3;
}

message AttachToProcessWithIDResponse {
  Common.GrpcSbProcess process = 1;
  Common.GrpcSbError error = 2;
}

message BreakpointCreateByLocationRequest {
  Common.GrpcSbTarget target = 1;
  string file = 2;
  uint32 line = 3;
}

message BreakpointCreateByLocationResponse {
  Common.GrpcSbBreakpoint breakpoint = 1;
}

message BreakpointCreateByNameRequest {
  Common.GrpcSbTarget target = 1;
  string symbol_name = 2;
}

message BreakpointCreateByNameResponse {
  Common.GrpcSbBreakpoint breakpoint = 1;
}

message BreakpointCreateByAddressRequest {
  Common.GrpcSbTarget target = 1;
  uint64 address = 2;
}

message BreakpointCreateByAddressResponse {
  Common.GrpcSbBreakpoint breakpoint = 1;
}

message CreateFunctionOffsetBreakpointRequest {
  Common.GrpcSbTarget target = 1;
  string symbol_name = 2;
  uint32 offset = 3;
}

message CreateFunctionOffsetBreakpointResponse {
  Common.GrpcSbBreakpoint breakpoint = 1;
  Common.BreakpointError error = 2;
}

message BreakpointDeleteRequest {
  Common.GrpcSbTarget target = 1;
  int32 breakpointId = 2;
}

message BreakpointDeleteResponse {
  bool success = 1;
}

message GetNumModulesRequest {
  Common.GrpcSbTarget target = 1;
}

message GetNumModulesResponse {
  int32 result = 1;
}

message GetModuleAtIndexRequest {
  Common.GrpcSbTarget target = 1;
  int32 index = 2;
}

message GetModuleAtIndexResponse {
  Common.GrpcSbModule module = 1;
}

message WatchAddressRequest {
  Common.GrpcSbTarget target = 1;
  int64 address = 2;
  uint64 size = 3;
  bool read = 4;
  bool write = 5;
}

message WatchAddressResponse {
  Common.GrpcSbWatchpoint watchpoint = 1;
  Common.GrpcSbError error = 2;
}

message DeleteWatchpointRequest {
  Common.GrpcSbTarget target = 1;
  int32 watchId = 2;
}

message DeleteWatchpointResponse {
  bool success = 1;
}

message ResolveLoadAddressRequest {
  Common.GrpcSbTarget target = 1;
  uint64 address = 2;
}

message ResolveLoadAddressResponse {
  Common.GrpcSbAddress address = 1;
}

message LoadCoreRequest {
  Common.GrpcSbTarget target = 1;
  string corePath = 2;
}

message LoadCoreResponse {
  Common.GrpcSbProcess process = 1;
}

message RemoveModuleRequest {
  Common.GrpcSbTarget target = 1;
  Common.GrpcSbModule module = 2;
}

message RemoveModuleResponse {
  bool result = 1;
}

message AddModuleRequest {
  Common.GrpcSbTarget target = 1;
  string path = 2;
  google.protobuf.StringValue triple = 3;
  google.protobuf.StringValue uuid = 4;
}

message AddModuleResponse {
  Common.GrpcSbModule module = 1;
}

message SetModuleLoadAddressRequest {
  Common.GrpcSbTarget target = 1;
  Common.GrpcSbModule module = 2;
  int64 sectionsOffset = 3;
}

message SetModuleLoadAddressResponse {
  Common.GrpcSbError error = 1;
}

message ReadInstructionInfosRequest {
  Common.GrpcSbTarget target = 1;
  Common.GrpcSbAddress address = 2;
  uint32 count = 3;
  string flavor = 4;
}

message ReadInstructionInfosResponse {
  repeated Common.GrpcInstructionInfo instructions = 1;
}